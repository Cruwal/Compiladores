PROGRAMA -> program ident ; CORPO .
CORPO -> DC begin COMANDOS end
DC -> DC_C DC_V DC_P
DC_C -> const ident = NUMERO ; DC_C | EPSILON
DC_V -> var VARIAVEIS : TIPO_VAR ; DC_V | EPSILON
TIPO_VAR -> real | integer
VARIAVEIS -> ident MAIS_VAR
MAIS_VAR -> , VARIAVEIS | EPSILON
DC_P -> procedure ident PARAMETROS ; CORPO_P DC_P | EPSILON
PARAMETROS -> ( LISTA_PAR ) | EPSILON
LISTA_PAR -> VARIAVEIS : TIPO_VAR MAIS_PAR
MAIS_PAR -> ; LISTA_PAR | EPSILON
CORPO_P -> DC_LOC begin COMANDOS end ;
DC_LOC -> DC_V
LISTA_ARG -> ( ARGUMENTOS ) | EPSILON
ARGUMENTOS -> ident MAIS_IDENT
MAIS_IDENT -> ; ARGUMENTOS | EPSILON
PFALSA -> else CMD | EPSILON
COMANDOS -> CMD ; COMANDOS | EPSILON
CMD -> read ( VARIAVEIS ) | write ( VARIAVEIS ) | while ( CONDICAO ) do CMD | if CONDICAO then CMD PFALSA | ident := EXPRESSAO | ident LISTA_ARG | begin COMANDOS end | for ( numero_int to numero_int ) do
CONDICAO -> EXPRESSAO RELACAO EXPRESSAO
RELACAO -> = | <> | >= | <= | > | <
EXPRESSAO -> TERMO OUTROS_TERMOS
OP_UN -> + | - | EPSILON
OUTROS_TERMOS -> OP_AD TERMO OUTROS_TERMOS | EPSILON
OP_AD -> + | -
TERMO -> OP_UN FATOR MAIS_FATORES
MAIS_FATORES -> OP_MUL FATOR MAIS_FATORES | EPSILON
OP_MUL -> * | /
FATOR -> ident | NUMERO | ( EXPRESSAO )
NUMERO -> numero_int | numero_real